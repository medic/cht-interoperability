// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createServiceRequest creates a service request when given valid request document 1`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Patient/?identifier=PATIENT_ID",
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest creates a service request when given valid request document 2`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Subscription",
      {
        "channel": {
          "endpoint": "CALLBACK_URL",
          "header": [
            "Content-Type: application/fhir+json",
          ],
          "payload": "application/fhir+json",
          "type": "rest-hook",
        },
        "criteria": "Encounter?identifier=PATIENT_ID",
        "id": "PATIENT_ID",
        "reason": "Follow up request for patient",
        "resourceType": "Subscription",
        "status": "requested",
      },
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
    [
      "http:/admin:password@nginx/api/v2/records",
      {
        "_meta": {
          "form": "interop_follow_up",
        },
        "patient_uuid": "PATIENT_ID",
      },
      {
        "httpsAgent": Agent {
          "_events": {
            "free": [Function],
            "newListener": [Function],
          },
          "_eventsCount": 2,
          "_maxListeners": undefined,
          "_sessionCache": {
            "list": [],
            "map": {},
          },
          "defaultPort": 443,
          "freeSockets": {},
          "keepAlive": false,
          "keepAliveMsecs": 1000,
          "maxCachedSessions": 100,
          "maxFreeSockets": 256,
          "maxSockets": Infinity,
          "maxTotalSockets": Infinity,
          "options": {
            "path": null,
            "rejectUnauthorized": false,
          },
          "protocol": "https:",
          "requests": {},
          "scheduling": "lifo",
          "sockets": {},
          "totalSocketCount": 0,
          Symbol(kCapture): false,
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest returns a 500 status code if record creation on cht fails 1`] = `"unable to create the follow up task"`;

exports[`createServiceRequest returns a 500 status code if record creation on cht fails 2`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Patient/?identifier=PATIENT_ID",
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest returns a 500 status code if record creation on cht fails 3`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Subscription",
      {
        "channel": {
          "endpoint": "CALLBACK_URL",
          "header": [
            "Content-Type: application/fhir+json",
          ],
          "payload": "application/fhir+json",
          "type": "rest-hook",
        },
        "criteria": "Encounter?identifier=PATIENT_ID",
        "id": "PATIENT_ID",
        "reason": "Follow up request for patient",
        "resourceType": "Subscription",
        "status": "requested",
      },
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
    [
      "http:/admin:password@nginx/api/v2/records",
      {
        "_meta": {
          "form": "interop_follow_up",
        },
        "patient_uuid": "PATIENT_ID",
      },
      {
        "httpsAgent": Agent {
          "_events": {
            "free": [Function],
            "newListener": [Function],
          },
          "_eventsCount": 2,
          "_maxListeners": undefined,
          "_sessionCache": {
            "list": [],
            "map": {},
          },
          "defaultPort": 443,
          "freeSockets": {},
          "keepAlive": false,
          "keepAliveMsecs": 1000,
          "maxCachedSessions": 100,
          "maxFreeSockets": 256,
          "maxSockets": Infinity,
          "maxTotalSockets": Infinity,
          "options": {
            "path": null,
            "rejectUnauthorized": false,
          },
          "protocol": "https:",
          "requests": {},
          "scheduling": "lifo",
          "sockets": {},
          "totalSocketCount": 0,
          Symbol(kCapture): false,
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest returns status code and error message when give an invalid service request 1`] = `
{
  "message": "Invalid patient id was expecting type of 'string' or 'number' but received 'undefined'",
}
`;

exports[`createServiceRequest returns status code and error when server fails to create a subscription 1`] = `
{
  "message": undefined,
}
`;

exports[`createServiceRequest returns status code and error when server fails to create a subscription 2`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Patient/?identifier=PATIENT_ID",
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest returns status code and error when server fails to create a subscription 3`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Subscription",
      {
        "channel": {
          "endpoint": "CALLBACK_URL",
          "header": [
            "Content-Type: application/fhir+json",
          ],
          "payload": "application/fhir+json",
          "type": "rest-hook",
        },
        "criteria": "Encounter?identifier=PATIENT_ID",
        "id": "PATIENT_ID",
        "reason": "Follow up request for patient",
        "resourceType": "Subscription",
        "status": "requested",
      },
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest returns the status code of the failed susbscription creation request 1`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Patient/?identifier=PATIENT_ID",
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;

exports[`createServiceRequest returns the status code of the failed susbscription creation request 2`] = `
[MockFunction] {
  "calls": [
    [
      "http://openhim-core:5001/fhir/Subscription",
      {
        "channel": {
          "endpoint": "CALLBACK_URL",
          "header": [
            "Content-Type: application/fhir+json",
          ],
          "payload": "application/fhir+json",
          "type": "rest-hook",
        },
        "criteria": "Encounter?identifier=PATIENT_ID",
        "id": "PATIENT_ID",
        "reason": "Follow up request for patient",
        "resourceType": "Subscription",
        "status": "requested",
      },
      {
        "auth": {
          "password": "interop-password",
          "username": "interop-client",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;
